var documenterSearchIndex = {"docs":
[{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"EditURL = \"/home/runner/work/PyCallJLD2.jl/PyCallJLD2.jl/docs/examples/tutorials/scikitlearn.jl\"","category":"page"},{"location":"examples/tutorials/scikitlearn/#scikit-learn","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"","category":"section"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"(Image: Source code) (Image: notebook) (Image: compat) (Image: Author) (Image: Update time)","category":"page"},{"location":"examples/tutorials/scikitlearn/#Overview","page":"PyCallJLD2 and ScikitLearn.jl","title":"Overview","text":"","category":"section"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"This demo shows how to use PyCallJLD2.jl to save models from ScikitLearn.jl. This script borrows heavily from the saving models to disk example in ScikitLearn.jl documentation to illustrate how this package can be used as a drop-in for using JLD2.jl instead of JLD.jl.","category":"page"},{"location":"examples/tutorials/scikitlearn/#Setup","page":"PyCallJLD2 and ScikitLearn.jl","title":"Setup","text":"","category":"section"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"First, you must have your PyCall environment setup in the correct way. Here, we will point to the default Python installation internal to Julia and make sure to rebuild the PyCall package to point to it","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"ENV[\"PYTHON\"] = \"\"\nusing Pkg\nPkg.build(\"PyCall\")","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"    Building Conda ─→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/8c86e48c0db1564a1d49548d3515ced5d604c408/build.log`\n    Building PyCall → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/43d304ac6f0354755f1d60730ece8c499980f7ba/build.log`\n","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"Next, we load our dependencies. To use this package, you must load PyCall, JLD2, and PyCallJLD2 in the context that you intend to do model saving and loading:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"# Load the modules into the current context\nusing\n    PyCall,     # for PyObjects\n    JLD2,       # for saving and loading\n    PyCallJLD2  # for telling JLD2 how to save and load PyObjects","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"Because we are showing how to save and load ScikitLearn.jl objects, we will also load that package and other dependencies:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"using\n    ScikitLearn,            # for @sk_import\n    ScikitLearn.Pipelines   # for Pipeline","category":"page"},{"location":"examples/tutorials/scikitlearn/#Create-some-ScikitLearn.jl-PyObjects","page":"PyCallJLD2 and ScikitLearn.jl","title":"Create some ScikitLearn.jl PyObjects","text":"","category":"section"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"Now we use the ScikitLearn.jl API to load scikit-learn modules:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"# Import some scikit-learn modules\n@sk_import decomposition: PCA\n@sk_import linear_model: LinearRegression","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"PyObject <class 'sklearn.linear_model._base.LinearRegression'>","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"We can instantiate the modules:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"pca = PCA()\nlm = LinearRegression()","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"<style>#sk-container-id-12 {color: black;}#sk-container-id-12 pre{padding: 0;}#sk-container-id-12 div.sk-toggleable {background-color: white;}#sk-container-id-12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-12 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-12 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-12 div.sk-item {position: relative;z-index: 1;}#sk-container-id-12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-12 div.sk-item::before, #sk-container-id-12 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-12 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-12 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-12 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-12 div.sk-label-container {text-align: center;}#sk-container-id-12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-12 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" checked><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"and make up some random training data:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"X=rand(10, 3); y=rand(10);","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"and create a pipeline from one model to another:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"pip = Pipeline([(\"PCA\", pca), (\"LinearRegression\", lm)])","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"ScikitLearn.Skcore.Pipeline(Tuple{Any, Any}[(\"PCA\", PyObject PCA()), (\"LinearRegression\", PyObject LinearRegression())], Any[PyObject PCA(), PyObject LinearRegression()])","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"Just to illustrate the statefulness of the model, let us fit the pipeline to our random dataset:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"fit!(pip, X, y)   # fit to some dataset","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"ScikitLearn.Skcore.Pipeline(Tuple{Any, Any}[(\"PCA\", PyObject PCA()), (\"LinearRegression\", PyObject LinearRegression())], Any[PyObject PCA(), PyObject LinearRegression()])","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"and see how it fares on the same data:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"score_1 = score(pip, X, y)","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"0.12379460587452418","category":"page"},{"location":"examples/tutorials/scikitlearn/#Save-and-Load","page":"PyCallJLD2 and ScikitLearn.jl","title":"Save and Load","text":"","category":"section"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"Now we will save the model with the JLD2.save interface:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"# Name the file to save and load to\nmodel_file = \"models.jld2\"\n# Save the pipeline\nJLD2.save(model_file, \"pip\", pip)","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"And we can load the same module into another variable in this context:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"pip_2 = JLD2.load(model_file, \"pip\")","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"ScikitLearn.Skcore.Pipeline(Tuple{Any, Any}[(\"PCA\", PyObject PCA()), (\"LinearRegression\", PyObject LinearRegression())], Any[PyObject PCA(), PyObject LinearRegression()])","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"Finally, lets calculate the score again for the loaded model:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"score_2 = score(pip_2, X, y)","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"0.12379460587452418","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"and verify that the score is the same as before","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"score_1 == score_2","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"true","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"And voila! The answers are the same because we retained the stateful information of the pipeline during saving and loading.","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"note: Note\nWhen loading the object, you must be sure that the definition for the unpacked data is in the current workspace (i.e., if you change terminal sessions here, you must remember to reimport @sk_import ... before loading the model file).","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"For the sake of this script, we will clean up after ourselves and remove the model:","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"rm(model_file)","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"","category":"page"},{"location":"examples/tutorials/scikitlearn/","page":"PyCallJLD2 and ScikitLearn.jl","title":"PyCallJLD2 and ScikitLearn.jl","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"man/contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"This page serves as the contribution guide for the PyCallJLD2.jl package. From top to bottom, the ways of contributing are:","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"GitHub Issues: how to raise an issue with the project.\nJulia Development: how to download and interact with the package.\nGitFlow: how to directly contribute code to the package in an organized way on GitHub.\nDevelopment Details: how the internals of the package are currently setup if you would like to directly contribute code.","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"Please also see the Attribution to learn about the authors and sources of support for the project.","category":"page"},{"location":"man/contributing/#Issues","page":"Contributing","title":"Issues","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"The main point of contact is the GitHub issues page for the project. This is the easiest way to contribute to the project, as any issue you find or request you have will be addressed there by the authors of the package. Depending on the issue, the authors will collaborate with you, and after making changes they will link a pull request which addresses your concern or implements your proposed changes.","category":"page"},{"location":"man/contributing/#Julia-Development","page":"Contributing","title":"Julia Development","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"As a Julia package, development follows the usual procedure:","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"Clone the project from GitHub\nSwitch to or create the branch that you wish work on (see GitFlow).\nStart Julia at your development folder.\nInstantiate the package (i.e., download and install the package dependencies).","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"For example, you can get the package and startup Julia with","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"git clone git@github.com:AP6YC/PyCallJLD2.jl.git\njulia --project=.","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"note: Note\nIn Julia, you must activate your project in the current REPL to point to the location/scope of installed packages. The above immediately activates the project when starting up Julia, but you may also separately startup the julia and activate the package with the interactive package manager via the ] syntax:julia\njulia> ]\n(@v1.9) pkg> activate .\n(PyCallJLD2) pkg>","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"You may run the package's unit tests after the above setup in Julia with","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"julia> using Pkg\njulia> Pkg.instantiate()\njulia> Pkg.test()","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"or interactively though the Julia package manager with","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"julia> ]\n(PyCallJLD2) pkg> instantiate\n(PyCallJLD2) pkg> test","category":"page"},{"location":"man/contributing/#GitFlow","page":"Contributing","title":"GitFlow","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"The PyCallJLD2.jl package follows the GitFlow git working model. The original post by Vincent Driessen outlines this methodology quite well, while Atlassian has a good tutorial as well. In summary:","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"Create a feature branch off of the develop branch with the name feature/<my-feature-name>.\nCommit your changes and push to this feature branch.\nWhen you are satisfied with your changes, initiate a GitHub pull request (PR) to merge the feature branch with develop.\nIf the unit tests pass, the feature branch will first be merged with develop and then be deleted.\nReleases will be periodically initiated from the develop branch and versioned onto the master branch.\nImmediate bug fixes circumvent this process through a hotfix branch off of master.","category":"page"},{"location":"man/contributing/#Development-Details","page":"Contributing","title":"Development Details","text":"","category":"section"},{"location":"man/contributing/#Documentation","page":"Contributing","title":"Documentation","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"These docs are currently hosted as a static site on the GitHub pages platform. They are setup to be built and served in a separate branch called gh-pages from the master/development branches of the project.","category":"page"},{"location":"man/contributing/#Package-Structure","page":"Contributing","title":"Package Structure","text":"","category":"section"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"The PyCallJLD2.jl project has the following file structure:","category":"page"},{"location":"man/contributing/","page":"Contributing","title":"Contributing","text":"PyCallJLD2.jl\n├── .github/workflows       // GitHub: workflows for testing and documentation.\n├── docs                    // Docs: documentation for the module.\n│   └───src                 //      Documentation source files.\n├── src                     // Source: library source code.\n├── test                    // Test: Unit, integration, and environment tests.\n├── .gitattributes          // Git: LFS settings, languages, etc.\n├── .gitignore              // Git: .gitignore for the whole project.\n├── CODE_OF_CONDUCT.md      // Doc: the code of conduct for contributors.\n├── CONTRIBUTING.md         // Doc: contributing guide (points to this page).\n├── LICENSE                 // Doc: the license to the project.\n├── Project.toml            // Julia: the Pkg.jl dependencies of the project.\n└── README.md               // Doc: the top-level readme for the project.","category":"page"},{"location":"man/dev-index/#dev-main-index","page":"Dev Index","title":"Developer Index","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"This page lists the types and functions that are internal to the PyCallJLD2.jl package. Because they are not part of the public API, these names might change relatively frequently between versions and so should not be relied upon.","category":"page"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"All internal names are listed in the Index, and each of these entries link to the docstrings in the Docs section.","category":"page"},{"location":"man/dev-index/#dev-index-toc","page":"Dev Index","title":"\"Table\" of Contents","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Modules Functions Types Constants\nIndex Index Index Index\nDocs Docs Docs Docs","category":"page"},{"location":"man/dev-index/#dev-index","page":"Dev Index","title":"Index","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"This section contains a list of internal names that link to their corresponding Documentation.","category":"page"},{"location":"man/dev-index/#dev-index-modules","page":"Dev Index","title":"Modules","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Pages   = [\"dev-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:module]","category":"page"},{"location":"man/dev-index/#dev-index-functions","page":"Dev Index","title":"Functions","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Pages   = [\"dev-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:function]","category":"page"},{"location":"man/dev-index/#dev-index-types","page":"Dev Index","title":"Types","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Pages   = [\"dev-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:type]","category":"page"},{"location":"man/dev-index/#dev-index-constants","page":"Dev Index","title":"Constants","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Pages   = [\"dev-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:constant]","category":"page"},{"location":"man/dev-index/#dev-index-docs","page":"Dev Index","title":"Docs","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Documentation for all internal names are listed below.","category":"page"},{"location":"man/dev-index/#dev-index-modules-docs","page":"Dev Index","title":"Modules","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Modules = [PyCallJLD2]\nPublic  = false\nOrder   = [:module]","category":"page"},{"location":"man/dev-index/#dev-index-functions-docs","page":"Dev Index","title":"Functions","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Modules = [PyCallJLD2]\nPublic  = false\nOrder   = [:function]","category":"page"},{"location":"man/dev-index/#PyCallJLD2.pylock-Tuple{Function}","page":"Dev Index","title":"PyCallJLD2.pylock","text":"pylock(f::Function) -> Any\n\n\nSummary\n\nDefinition of the reentrant lock for PyCall functions.\n\nMethod List / Definition Locations\n\npylock(f)\n\ndefined at /home/runner/work/PyCallJLD2.jl/PyCallJLD2.jl/src/lib/pycalljld2.jl:67.\n\n\n\n\n\n","category":"method"},{"location":"man/dev-index/#dev-index-types-docs","page":"Dev Index","title":"Types","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Modules = [PyCallJLD2]\nPublic  = false\nOrder   = [:type]","category":"page"},{"location":"man/dev-index/#PyCallJLD2.PyObjectSerialization","page":"Dev Index","title":"PyCallJLD2.PyObjectSerialization","text":"struct PyObjectSerialization\n\nSummary\n\nSerialization wrapper type for PyObjects to be saved with JLD2.\n\nFields\n\nrepr::Vector{UInt8}: Byte representation of the serialized PyObject data.\n\n\n\n\n\n","category":"type"},{"location":"man/dev-index/#dev-index-constants-docs","page":"Dev Index","title":"Constants","text":"","category":"section"},{"location":"man/dev-index/","page":"Dev Index","title":"Dev Index","text":"Modules = [PyCallJLD2]\nPublic  = false\nOrder   = [:constant]","category":"page"},{"location":"man/dev-index/#PyCallJLD2.PYLOCK","page":"Dev Index","title":"PyCallJLD2.PYLOCK","text":"PYLOCK\n\nDescription\n\nLock during pycalls (see https://github.com/JuliaPy/PyCall.jl/issues/882).\n\n\n\n\n\n","category":"constant"},{"location":"man/dev-index/#PyCallJLD2.dumps","page":"Dev Index","title":"PyCallJLD2.dumps","text":"dumps\n\nDescription\n\nPointer to the correct Python pickle dumps object.\n\n\n\n\n\n","category":"constant"},{"location":"man/dev-index/#PyCallJLD2.loads","page":"Dev Index","title":"PyCallJLD2.loads","text":"loads\n\nDescription\n\nPointer to the correct Python pickle loads object.\n\n\n\n\n\n","category":"constant"},{"location":"man/full-index/#main-index","page":"Index","title":"Index","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"This page lists the core functions and types of the Julia component of the PyCallJLD2.jl package.","category":"page"},{"location":"man/full-index/#index-toc","page":"Index","title":"\"Table\" of Contents","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Modules Functions Types Constants\nIndex Index Index Index\nDocs Docs Docs Docs","category":"page"},{"location":"man/full-index/#index","page":"Index","title":"Index","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"This section enumerates the names exported by the package, each of which links to its corresponding Documentation.","category":"page"},{"location":"man/full-index/#index-modules","page":"Index","title":"Modules","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Pages   = [\"full-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:module]","category":"page"},{"location":"man/full-index/#index-functions","page":"Index","title":"Functions","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Pages   = [\"full-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:function]","category":"page"},{"location":"man/full-index/#index-types","page":"Index","title":"Types","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Pages   = [\"full-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:type]","category":"page"},{"location":"man/full-index/#index-constants","page":"Index","title":"Constants","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Pages   = [\"full-index.md\"]\nModules = [PyCallJLD2]\nOrder   = [:constant]","category":"page"},{"location":"man/full-index/#index-docs","page":"Index","title":"Docs","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"This section lists the documentation for every exported name of the PyCallJLD2 package.","category":"page"},{"location":"man/full-index/#index-modules-docs","page":"Index","title":"Modules","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Modules = [PyCallJLD2]\nPrivate = false\nOrder   = [:module]","category":"page"},{"location":"man/full-index/#PyCallJLD2.PyCallJLD2","page":"Index","title":"PyCallJLD2.PyCallJLD2","text":"The top-level module for the PyCallJLD2.jl package.\n\nImports\n\nThe following names are imported by the package as dependencies:\n\nBase\nCore\nDocStringExtensions\nJLD2\nPkg\nPyCall\n\nExports\n\nThe following names are exported and available when using the package:\n\nPYCALLJLD2_VERSION\n\n\n\n\n\n","category":"module"},{"location":"man/full-index/#index-functions-docs","page":"Index","title":"Functions","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Modules = [PyCallJLD2]\nPrivate = false\nOrder   = [:function]","category":"page"},{"location":"man/full-index/#index-types-docs","page":"Index","title":"Types","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Modules = [PyCallJLD2]\nPrivate = false\nOrder   = [:type]","category":"page"},{"location":"man/full-index/#index-constants-docs","page":"Index","title":"Constants","text":"","category":"section"},{"location":"man/full-index/","page":"Index","title":"Index","text":"Modules = [PyCallJLD2]\nPrivate = false\nOrder   = [:constant]","category":"page"},{"location":"man/full-index/#PyCallJLD2.PYCALLJLD2_VERSION","page":"Index","title":"PyCallJLD2.PYCALLJLD2_VERSION","text":"A constant that contains the version of the installed PyCallJLD2.jl package.\n\nThis value is computed at compile time, so it may be used to programmatically verify the version of OAR that is installed in case a compat entry in your Project.toml is missing or otherwise incorrect.\n\n\n\n\n\n","category":"constant"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"EditURL = \"/home/runner/work/PyCallJLD2.jl/PyCallJLD2.jl/docs/examples/tutorials/pycalljld2.jl\"","category":"page"},{"location":"examples/tutorials/pycalljld2/#pycalljld2-tutorial","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"","category":"section"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"(Image: Source code) (Image: notebook) (Image: compat) (Image: Author) (Image: Update time)","category":"page"},{"location":"examples/tutorials/pycalljld2/#Overview","page":"PyCallJLD2 Tutorial","title":"Overview","text":"","category":"section"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"This demo shows how to get started with PyCallJLD2.jl. Because its usage is very similar, much of the code is taken directly from the example for PyCallJLD as a direct comparison.","category":"page"},{"location":"examples/tutorials/pycalljld2/#Setup","page":"PyCallJLD2 Tutorial","title":"Setup","text":"","category":"section"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"First, you must have your PyCall environment setup in the correct way. Here, we will point to the default Python installation internal to Julia","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"ENV[\"PYTHON\"] = \"\"\nusing Pkg\nPkg.build(\"PyCall\")","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"    Building Conda ─→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/8c86e48c0db1564a1d49548d3515ced5d604c408/build.log`\n    Building PyCall → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/43d304ac6f0354755f1d60730ece8c499980f7ba/build.log`\n","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"Next, we load our dependencies. To use this package, you must load PyCall, JLD2, and PyCallJLD2 in the context that you intend to do model saving and loading:","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"# Load the modules into the current context\nusing\n    PyCall,     # for PyObjects\n    JLD2,       # for saving and loading\n    PyCallJLD2  # for telling JLD2 how to save and load PyObjects","category":"page"},{"location":"examples/tutorials/pycalljld2/#Create-some-PyObjects","page":"PyCallJLD2 Tutorial","title":"Create some PyObjects","text":"","category":"section"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"Next, we load a scikit-learn module with the @pyimport macro","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"@pyimport sklearn.linear_model as lm","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"We can finally create some Python objects:","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"m1 = lm.LinearRegression()","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"<style>#sk-container-id-6 {color: black;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"and","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"m2 = lm.ARDRegression()","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"<style>#sk-container-id-8 {color: black;}#sk-container-id-8 pre{padding: 0;}#sk-container-id-8 div.sk-toggleable {background-color: white;}#sk-container-id-8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-8 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-8 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-8 div.sk-item {position: relative;z-index: 1;}#sk-container-id-8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-8 div.sk-item::before, #sk-container-id-8 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-8 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-8 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-8 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-8 div.sk-label-container {text-align: center;}#sk-container-id-8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-8 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>ARDRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">ARDRegression</label><div class=\"sk-toggleable__content\"><pre>ARDRegression()</pre></div></div></div></div></div>","category":"page"},{"location":"examples/tutorials/pycalljld2/#Save-and-Load","page":"PyCallJLD2 Tutorial","title":"Save and Load","text":"","category":"section"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"We should first declare where we are saving the file rather than typing it out repeatedly:","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"model_file = \"models.jld2\"","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"\"models.jld2\"","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"To save, we use the normal JLD2.save usage:","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"JLD2.save(model_file, \"mods\", [m1, m2])","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"To load, we also use the normal JLD2.load usage:","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"models = JLD2.load(model_file, \"mods\")","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"2-element Vector{PyCall.PyObject}:\n PyObject LinearRegression()\n PyObject ARDRegression()","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"And voila! We have back our two models, ready for use.","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"note: Note\nWhen loading the object, you must be sure that the definition for the unpacked data is in the current workspace (i.e., if you change terminal sessions here, you must remember to reimport @pyimport sklearn.linear_model as lm before loading the model file).","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"For the sake of this script, we will clean up after ourselves and remove the model:","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"rm(model_file)","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"","category":"page"},{"location":"examples/tutorials/pycalljld2/","page":"PyCallJLD2 Tutorial","title":"PyCallJLD2 Tutorial","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"EditURL = \"/home/runner/work/PyCallJLD2.jl/PyCallJLD2.jl/docs/examples/index.md\"","category":"page"},{"location":"examples/#examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This section contains some examples using the PyCallJLD2.jl package with topics ranging from how to the internals of package work to practical examples.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"","category":"page"},{"location":"examples/#Tutorials","page":"Examples","title":"Tutorials","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"These practical examples demonstrate how to use the PyCallJLD2.jl package in various contexts.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"grid-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"card grid-card\">\n<div class=\"grid-card-cover\">\n<div class=\"grid-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This demo provides a quick example of how to run the PyCallJLD2 package for saving and loading PyCall objects with JLD2.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n<div class=\"grid-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"PyCallJLD2 Tutorial","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"card grid-card\">\n<div class=\"grid-card-cover\">\n<div class=\"grid-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This demo provides an example of how to run the PyCallJLD2 package for saving and loading ScikitLearn.jl objects with JLD2.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n<div class=\"grid-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"PyCallJLD2 and ScikitLearn.jl","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"","category":"page"},{"location":"examples/#examples-attribution","page":"Examples","title":"Attribution","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"The images for the demo card thumbails are attributed to the following sites:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Official Julia logo graphics\nscikit-learn logo","category":"page"},{"location":"man/guide/#package-guide","page":"Guide","title":"Package Guide","text":"","category":"section"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"To work with the PyCallJLD2.jl package, you should know:","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"How to install the package\nHow to use the package","category":"page"},{"location":"man/guide/#installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"The PyCallJLD2.jl package can be installed using the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"julia> ]\n(@v1.9) pkg> add PyCallJLD2","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"Alternatively, it can be added to your environment in a script with","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"using Pkg\nPkg.add(\"PyCallJLD2\")","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"If you wish to have the latest changes between releases, you can directly add the GitHub repo at an arbitrary branch (such as develop) as a dependency with","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"julia> ]\n(@v1.9) pkg> add https://github.com/AP6YC/PyCallJLD2.jl#develop","category":"page"},{"location":"man/guide/#basic-usage","page":"Guide","title":"Basic Usage","text":"","category":"section"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"To save and load JLD2, load PyCall, JLD2, and PyCallJLD2 in the same scope as where you intend to use the JLD2.save and JLD2.load functions. If you are coming from PyCallJLD, simply replace JLD with JLD2 everywhere in your usage:","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"# Import all of your dependencies\nimport PyCall, JLD2, PyCallJLD2","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"and use the JLD2 API to save:","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"JLD2.save(\"model_file.jld2\", \"model_name\", model)","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"or load:","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"JLD2.load(\"model_file.jld2\", \"model_name\")","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"note: Note\nWhen loading the model back, you must be sure that the definition for the unpacked data is in the current workspace (i.e., if you change terminal sessions here, you must remember to reimport @pyimport ... before loading the model file).","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"The following example is take from PyCallJLD for direct comparison:","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"# Load all dependencies in the context where we plan on saving and loading\nusing PyCall, JLD2, PyCallJLD2\n\n# Import the scikit-learn linear model module\n@pyimport sklearn.linear_model as lm\n\n# Create some Python objects\nm1 = lm.LinearRegression()\nm2 = lm.ARDRegression()\n\n# Save them to models.jld2\nJLD2.save(\"models.jld2\", \"mods\", [m1, m2])\n\n# Load them back\nmodels = JLD2.load(\"models.jld2\", \"mods\")\n\n# Do a dance🕺","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"Just as in PyCallJLD, these objects are saved with pickle.dumps.","category":"page"},{"location":"man/guide/","page":"Guide","title":"Guide","text":"note: Note\nPlease see the Examples page to see this usage in action with PyCall.jl and ScikitLearn.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"DocTestSetup = quote\n    using PyCallJLD2, Dates\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: header)","category":"page"},{"location":"#PyCallJLD2.jl","page":"Home","title":"PyCallJLD2.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"These pages serve as the official documentation for the PyCallJLD2.jl Julia package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The purpose of this package is to provide an interface for saving PyCall.PyObjects with JLD2. Please see the Package Guide for usage, and check out the Examples page to see this usage in action with PyCall.jl and ScikitLearn.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you wish to contribute to the project, please see the Contributing guide. The public API is listed in the Index, while the internal API is listed in the Developer Index.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This project is heavily inspired by PyCallJLD.","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This documentation is split into the following sections:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"man/guide.md\",\n    \"../examples/index.md\",\n    \"man/contributing.md\",\n    \"man/full-index.md\",\n    \"man/dev-index.md\",\n]\nDepth = 1","category":"page"},{"location":"#attribution","page":"Home","title":"Attribution","text":"","category":"section"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is developed and maintained by Sasha Petrenko with sponsorship by the Applied Computational Intelligence Laboratory (ACIL).","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you simply have suggestions for improvement, Sasha Petrenko (<petrenkos@mst.edu>) is the current developer and maintainer of the PyCallJLD2 package, so please feel free to reach out with thoughts and questions.","category":"page"},{"location":"#Package","page":"Home","title":"Package","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is heavily based upon the PyCallJLD.jl package; the funky-monkey-wrenching of PyCall ccalls, pointers, and other low-level tomfoolery would have been arcane and indecipherable without this prior work. This package merely modifies its internal usage to match the modified JLD2 API for custom serialization.","category":"page"},{"location":"#Icons","page":"Home","title":"Icons","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The icon used for the project logo is from the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Python file icons created by Smashicons (file_2570575)","category":"page"},{"location":"#Funding","page":"Home","title":"Funding","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This research was sponsored by the Army Research Laboratory and was accomplished under Cooperative Agreement Number W911NF-22-2-0209. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the Army Research Laboratory or the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation herein.","category":"page"},{"location":"#Documentation-Build","page":"Home","title":"Documentation Build","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This documentation was built using Documenter.jl with the following version and OS:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using PyCallJLD2, Dates # hide\nprintln(\"PyCallJLD2 v$(PYCALLJLD2_VERSION) docs built $(Dates.now()) with Julia $(VERSION) on $(Sys.KERNEL)\") # hide","category":"page"}]
}
